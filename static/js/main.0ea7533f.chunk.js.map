{"version":3,"sources":["helpers.js","components/Cart/CartItem.js","components/Cart/CartItemsList.js","components/Cart/CartToggleBtn.js","components/Products/ProductListItem.js","components/Products/ProductSorter.js","components/Products/ProductList.js","products.js","App.js","serviceWorker.js","index.js"],"names":["formatPrice","price","Intl","NumberFormat","style","currency","minimumFractionDigits","format","CartItem","props","_props$cartItemData","cartItemData","id","image","name","qty","react_default","a","createElement","className","src","href","onSubmit","handleQtySubmit","type","onChange","e","handleQtyChange","value","onClick","addeCartItem","removeCartItem","class","CartItemsList","cartItems","length","map","cartItem","Cart_CartItem","key","addCartItem","cartSummary","CartToggleBtn","handleCart","isCartOpen","ProductListItem","_props$productData","productData","addToCart","ProductSorter","productsSortedBy","handleSorting","ProductList","products","product","Products_ProductListItem","Products_ProductSorter","src_products","App","state","sortByProperty","property","newProductsArray","_this","sort","b","setState","target","productId","productObj","find","item","newProduct","concat","Object","toConsumableArray","itemId","itemObj","newItemsArray","filter","preventDefault","qtyChange","this","Cart_CartToggleBtn","Cart_CartItemsList","Products_ProductList","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0ea7533f.chunk.js","sourcesContent":["export const formatPrice = (price) => {\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 2\r\n    })\r\n\r\n    return formatter.format(price);\r\n  }\r\n","import React from 'react';\r\nimport { formatPrice } from '../../helpers';\r\n\r\nconst CartItem = (props) => {\r\n  const { id, image, name, price, qty } = props.cartItemData;\r\n\r\n  return (\r\n    <div className=\"cart-item\">\r\n      <img src={image} className=\"cart-item__img\" />\r\n      <a href=\"#\" className=\"cart-item__name\">\r\n        {name}\r\n      </a>\r\n      <div className=\"cart-item__qty\">\r\n        {qty}\r\n      </div>\r\n      <form onSubmit={props.handleQtySubmit} className=\"cart-item__form\">\r\n        <input type=\"number\"\r\n          onChange={(e) => props.handleQtyChange(e)}\r\n          name={id}\r\n          value={qty}\r\n          className=\"cart-item__input\"\r\n        />\r\n        <div className=\"cart-item__btns\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"cart-item__btn\"\r\n            onClick={props.addeCartItem}\r\n          >+</button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"cart-item__btn\"\r\n            onClick={props.removeCartItem}\r\n          >-</button>\r\n        </div>\r\n      </form>\r\n      <div class=\"cart-item__price\">\r\n        {formatPrice(price)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartItem;\r\n","import React from 'react';\r\nimport CartItem from './CartItem';\r\nimport { formatPrice } from '../../helpers';\r\n\r\nconst CartItemsList = (props) => {\r\n  if (props.cartItems.length > 0) {\r\n    const cartItems = props.cartItems.map((cartItem) =>\r\n      <CartItem\r\n        key={cartItem.id}\r\n        cartItemData={cartItem}\r\n        addeCartItem={() => props.addCartItem(cartItem.id)}\r\n        removeCartItem={() => props.removeCartItem(cartItem.id)}\r\n        handleQtyChange={(e) => props.handleQtyChange(e)}\r\n        handleQtySubmit={(e) => props.handleQtySubmit(e)}\r\n      />\r\n    );\r\n      return (\r\n        <ul className=\"cart-items-list\">\r\n          <h2>Cart</h2>\r\n          {cartItems}\r\n          <div className=\"cart__summary\">\r\n            {formatPrice(props.cartSummary)}\r\n          </div>\r\n        </ul>\r\n      )\r\n  }\r\n  else {\r\n    return (\r\n      <p>\r\n       Your cart is empty at this moment\r\n      </p>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CartItemsList;\r\n","import React from 'react';\r\n\r\nconst CartToggleBtn = (props) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => props.handleCart()}\r\n      className=\"cart-toggle-btn\">\r\n      {props.isCartOpen ? 'Close cart' : 'Open cart'}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default CartToggleBtn;\r\n","import React from 'react';\r\nimport { formatPrice } from '../../helpers';\r\n\r\nconst ProductListItem = (props) => {\r\n  const { image, name, price } = props.productData;\r\n  return (\r\n    <div className=\"product-list-item\">\r\n      <img src={image} className=\"product-list-item__img\" />\r\n      <a href=\"#\"className=\"product-list-item__name\">\r\n        {name}\r\n      </a>\r\n      <div className=\"product-list-item__price\">\r\n        {formatPrice(price)}\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"product-list-item__add-to-cart\"\r\n        onClick={props.addToCart}\r\n      >Add to cart</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductListItem;\r\n","import React from 'react';\r\n\r\nconst ProductSorter = (props) => {\r\n  return (\r\n    <form>\r\n      <select\r\n        value={props.productsSortedBy}\r\n        onChange={(e) => props.handleSorting(e)}\r\n      >\r\n        <option name=\"name\">name</option>\r\n        <option name=\"price\">price</option>\r\n      </select>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ProductSorter;\r\n","import React from 'react';\r\nimport ProductListItem from './ProductListItem';\r\nimport ProductSorter from './ProductSorter';\r\n\r\nconst ProductList = (props) => {\r\n  const products = props.products.map((product) =>\r\n    <ProductListItem\r\n      key={product.id}\r\n      productData={product}\r\n      addToCart={() => props.addToCart(product.id)}\r\n    />\r\n  );\r\n  return (\r\n    <div className=\"product-list__container\">\r\n    <div className=\"product-list__topbar\">\r\n        <h2 className=\"title\">Products</h2>\r\n        <ProductSorter\r\n          productsSortedBy={props.productsSortedBy}\r\n          handleSorting={(e) => props.handleSorting(e)}\r\n        />\r\n      </div>\r\n      <ul className=\"product-list\">\r\n       {products}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductList;\r\n","export default [\r\n  {\r\n    id: '1',\r\n    image: 'https://groceries.morrisons.com/productImages/212/212241011_0_640x640.jpg?identifier=ebddefbdf7ea0528680bc3a3ca02789b',\r\n    name: 'Pepsi',\r\n    price: 4.99\r\n  },\r\n  {\r\n    id: '2',\r\n    image: 'https://groceries.morrisons.com/productImages/400/400693011_0_640x640.jpg?identifier=c5865252ecaa8a220e1e093509200fe3',\r\n    name: 'Coca Cola',\r\n    price: 4.99\r\n  },\r\n  {\r\n    id: '3',\r\n    image: 'https://groceries.morrisons.com/productImages/113/113921011_0_640x640.jpg?identifier=f9b0c608f534f91ec81e5908d47d33fa',\r\n    name: 'Coca Cola Zero Sugar',\r\n    price: 1.49\r\n  },\r\n  {\r\n    id: '4',\r\n    image: 'https://groceries.morrisons.com/productImages/247/247722011_0_640x640.jpg?identifier=112afc362180218f2a0ae137e19458ab',\r\n    name: 'Morrisons Cola',\r\n    price: 6.99\r\n  },\r\n  {\r\n    id: '5',\r\n    image: 'https://i5.walmartimages.com/asr/a34557d5-631b-4281-a1f8-b3b8e3257319_1.1d741e53e4aa625655c6d33fd12dddb6.jpeg?odnHeight=450&odnWidth=450&odnBg=FFFFFF',\r\n    name: 'Faygo 2l Cola',\r\n    price: 3.99\r\n  },\r\n  {\r\n    id: '6',\r\n    image: 'https://groceries.morrisons.com/productImages/400/400695011_0_640x640.jpg?identifier=584ce22551995eb192cd1e19d98eeeae',\r\n    name: 'Coca Cola Cherry',\r\n    price: 4.99\r\n  },\r\n  {\r\n    id: '7',\r\n    image: 'https://groceries.morrisons.com/productImages/113/113927011_0_640x640.jpg?identifier=2afdb568d7d4d0b2f793a680e4dd362d',\r\n    name: 'Pepsi Max',\r\n    price: 3.49\r\n  },\r\n  {\r\n    id: '8',\r\n    image: 'https://i5.walmartimages.com/asr/33f8d9ff-9886-4340-9195-cd26f5408b8b_1.36eb7c2640125bf50c5f5d4a9a2bde5a.jpeg?odnHeight=450&odnWidth=450&odnBg=FFFFFF',\r\n    name: 'Diet Dr. Thunder',\r\n    price: 5.99\r\n  },\r\n]\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport CartItemsList from './components/Cart/CartItemsList';\nimport CartToggleBtn from './components/Cart/CartToggleBtn';\nimport ProductList from './components/Products/ProductList';\nimport products from './products';\n\nclass App extends Component {\n  state = {\n    products: products,\n    productsSortedBy: 'name',\n    isCartOpen: false,\n    cartItems: [],\n    cartSummary: 0,\n  }\n  sortByProperty = (property) => {\n    let newProductsArray;\n    if (property === 'name') {\n      newProductsArray = this.state.products.sort((a, b) => (a.name > b.name) ? 1 : -1);\n    }\n    else if (property === 'price') {\n      newProductsArray = this.state.products.sort((a, b) => (a.price > b.price) ? 1 : -1);\n    }\n    this.setState({\n      products: newProductsArray,\n      productsSortedBy: property\n    })\n  }\n  handleSorting = (e) => {\n     return e.target.value && this.sortByProperty(e.target.value);\n  }\n  handleCart = () => {\n    if (this.state.isCartOpen) {\n      this.setState({\n        isCartOpen: false\n      })\n    }\n    else {\n      this.setState({\n        isCartOpen: true\n      })\n    }\n  }\n  addToCart = (productId) => {\n    const productObj = this.state.cartItems.find((item) => item.id === productId);\n\n    if (productObj) {\n      productObj.qty++;\n      this.setState({\n        cartSummary: this.state.cartSummary + productObj.price\n      })\n    }\n    else {\n      const newProduct = this.state.products.find((product) => product.id === productId);\n      newProduct.qty = 1;\n      this.setState({\n        cartItems: [...this.state.cartItems, newProduct],\n        cartSummary: this.state.cartSummary + newProduct.price\n      })\n    }\n\n    this.setState({\n      isCartOpen: true\n    })\n  }\n  removeCartItem = (itemId) => {\n    const itemObj = this.state.cartItems.find((item) => item.id === itemId);\n\n    if (itemObj && itemObj.qty > 1) {\n      itemObj.qty--;\n      this.setState({\n        cartSummary: this.state.cartSummary - itemObj.price\n      })\n    }\n    else {\n      const newItemsArray = this.state.cartItems.filter((item) => item.id !== itemId);\n      this.setState({\n        cartItems: newItemsArray,\n        cartSummary: this.state.cartSummary - itemObj.price\n      })\n    }\n  }\n  handleQtySubmit = (e) => {\n    e.preventDefault();\n    this.handleQtyChange(e);\n  }\n  handleQtyChange = (e) => {\n   const itemObj = this.state.cartItems.find((item) => item.id === e.target.name);\n\n    if (itemObj) {\n      let qtyChange = (e.target.value - itemObj.qty);\n      itemObj.qty = e.target.value;\n      this.setState({\n        cartSummary: this.state.cartSummary + (itemObj.price * qtyChange)\n      })\n    }\n  }\n  componentDidMount() {\n    this.sortByProperty(this.state.productsSortedBy);\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <header className=\"app-header\">\n          <h1 className=\"app-header__heading\">\n            <a className=\"app-logo\" href=\"#\">Cokeshop</a>\n          </h1>\n        </header>\n        <CartToggleBtn handleCart={this.handleCart} isCartOpen={this.state.isCartOpen}/>\n        {(this.state.isCartOpen) ?\n          <CartItemsList\n            cartSummary={this.state.cartSummary}\n            cartItems={this.state.cartItems}\n            addCartItem={this.addToCart}\n            removeCartItem={this.removeCartItem}\n            handleQtyChange={this.handleQtyChange}\n            handleQtySubmit={this.handleQtySubmit}\n          />\n        : null}\n        <ProductList products={this.state.products} addToCart={this.addToCart} productsSortedBy={this.state.productsSortedBy} handleSorting={this.handleSorting}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}